import { Component, OnInit, OnDestroy } from '@angular/core';

import {
    VisNode,
    VisNodes,
    VisEdges,
    VisEdge,
    VisNetworkService,
    VisNetworkData,
    VisEdgeOptions,
    VisNetworkOptions } from 'ng2-vis';
import { MenubarModule, MenuItem, Menu, Dialog} from 'primeng/primeng';
import { GraphService } from './graph.service';
import {Node} from './node.model';
import {Link} from './link.model';

class ExampleNetworkData implements VisNetworkData {
    public nodes: VisNodes;
    public edges: VisEdges;
}

class ExampleEdgeOptions implements VisEdgeOptions{    
    public arrows: string = "from";
}
/**
 * 
 * NOTE: To start the json server run the following
 * 
 *  node node_modules/json-server/bin/index.js --watch test.json
 * 
 */
@Component({
    selector: 'network-example',
    template: require('./network-graph.component.html'),
    styles: [
        require('./network-graph.component.css')
    ]    
})
export class VisNetworkExampleComponent implements OnInit, OnDestroy {

    public visNetwork: string = 'networkId1';
    public visNetworkData: ExampleNetworkData;
    public visNetworkOptions: VisNetworkOptions;
    
    private items: MenuItem[];    

    private displayDialog: boolean = false;

    public constructor(private visNetworkService: VisNetworkService, private graphService: GraphService) { }

    public addNode(): void {
        let newId = this.visNetworkData.nodes.getLength() + 1;
        this.visNetworkData.nodes.add({ id: newId.toString(), label: 'Node ' + newId });
        this.visNetworkService.fit(this.visNetwork);
    }

    private showDialog(): void{
        this.displayDialog = true;
    }

    public networkInitialized(): void {
        // now we can use the service to register on events
        this.visNetworkService.on(this.visNetwork, 'click');

        // open your console/dev tools to see the click params
        this.visNetworkService.click
            .subscribe((eventData: any[]) => {
                if (eventData[0] === this.visNetwork) {
                    console.log(eventData[1]);
                }
            });
    }

    public ngOnInit(): void {

        this.items = [{
            label: 'Options',
            icon: 'fa-bars',            
        }];

        this.visNetworkData = {
            edges: new VisEdges([]),
            nodes: new VisNodes([]),
        };
        
        // Go out to the service and get the id of 1 and a depth of 3
        this.graphService.getNodes(1,3).subscribe(
            graph => {                
                let resultNodes:Node[] = graph.nodes;
                let resultLinks:Link[] = graph.links;
                
                if (resultNodes != null){                    
                    for(let n of resultNodes){                        
                        let visNode:VisNode = {
                            id : n.id,
                            label:n.label                                                        
                        };         
                        this.visNetworkData.nodes.add(visNode);                                                               
                    }
                }

                if (resultLinks != null){

                    for(let e of resultLinks){
                        let edge:VisEdge ={
                            to: e.to,
                            from: e.from
                        }; 
                        this.visNetworkData.edges.add(edge);
                    }                    
                }                               
            },
            error =>{
                console.log(error);
            },
            () =>{
                console.log("Completed!");
            }
        );
        
        this.visNetworkOptions = {
            interaction: {
               navigationButtons: true,
               keyboard: true
            },
            // TODO: This puts it in some sort death loop
            // layout: {
            //     hierarchical: {
            //         direction: 'LR'
            //     }
            // },
            nodes:{
                borderWidth: 4,
                size: 30,
                color:{
                    border: '#222222',
                    background: '#666666'
                },
                shadow: true,
                font:{
                    color: 'red',
                    size: 10,
                    face: 'Times New Roman',
                    background: '#666666',
                    strokeWidth: 2,
                    strokeColor: '#666666',
                    align: 'center'
                }
            },
            
            edges: new ExampleEdgeOptions()
        };
        
    }

    public ngOnDestroy(): void {
        this.visNetworkService.off(this.visNetwork, 'click');
    }
}
